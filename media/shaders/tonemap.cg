/*
 * Copyright 2008 Blanton Black
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

struct tonemapper
{
    float exposure;
    float bright_threshold;  // e.g. 1.2
    float gamma;             // e.g. 2.2
};

float4 tonemap (
    float2 tex_coord : TEXCOORD0,
    uniform sampler2D scene_tex,
    uniform tonemapper tmapr
    ) : COLOR
{
#ifndef NO_DEFAULT_BRIGHT_THRESHOLD
    tmapr.bright_threshold = 1.2;
#endif
#ifndef NO_DEFAULT_GAMMA
    tmapr.gamma            = 1.0;
#endif

    float4 c;
    c = tex2D(scene_tex, tex_coord);

    float yd = tmapr.exposure * (tmapr.exposure / tmapr.bright_threshold + 1.0)
               / (tmapr.exposure + 1.0);
    c *= yd;

    c = pow(c, float4(1.0 / tmapr.gamma));

    c.a = 1.0;

    return c;
}
